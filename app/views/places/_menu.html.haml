#menu.menu
  .wrapper
    .logo
      = link_to image_tag("represent.png"), "http://www.represent.ph"
    .blurb
      This map was made to connect and promote the philippine tech startup community.
      Let's put the Philippines on the map!
    .buttons
      %a.btn.btn-large.btn{"data-toggle" => "modal", :href => "#modal_info"} More Info
      %a.btn.btn-large.btn-info{"data-toggle" => "modal", :href => "#modal_add"} Add Something!
    .share
      %a.twitter-share-button{"data-count" => "none", "data-text" => "Let's put philippine startups on the map:", "data-url" => "http://www.represent.ph", "data-via" => "@proudcloud", :href => "https://twitter.com/share"} 
    .blurb
      %span Inspired by
      = link_to "RepresentMap", "http://www.representmap.com"
      and ported to Ruby on Rails by 
      %a{href: "http://www.twitter.com/hvictorsolis"}@hvictorsolis
      + 
      %a{href: "http://www.twitter.com/jayfajardo"}@jayfajardo
      +
      %a{href: "http://www.twitter.com/proudcloud"}@proudcloud
      
    .search
      %input#search{:autocomplete => "off", "data-provide" => "typeahead", :name => "search", :placeholder => "Type a company name...", :type => "text"}/

  %ul#list.list
    - index = 0
    - TYPES.each do |type|
      - @markers = Place.where(approved: true, type: type[1]).order_by(:title.asc).to_a
      %li.category
        .category_item
          .category_toggle{:id => "filter_#{type[0]}", :onClick => "toggle('#{type[1]}')"}
          %a.category_info{:href => "#", :onClick => "toggleList('#{type[1]}')"}
            %img{:alt => "", :src => "./images/icons/#{type[1]}.png"}>/
            #{type[0]}
            %span.total (#{@markers.length})
        %ul.list-items{:class => "list-#{type[1]}"}
          - @markers.each do |marker|
            %li{:class => "#{marker.type}"}
              %a{:href => "#", :onClick => "goToMarker('#{index}')", :onMouseOut => "markerListMouseOut('#{index}')", :onMouseOver => "markerListMouseOver('#{index}')"} 
                #{marker.title}
                -if marker.type == 'event'
                  ,&nbsp;
                  #{Date.parse(marker.date).strftime("%b %d")}
            - index+=1


