<?php include "header.php";

?>
!!!
%html
  %head
 
    / This site was based on the Represent.LA project by:
    / Alex Benzer (@abenzer)
    / Tara Tiger Brown (@tara)
    / Sean Bonner (@seanbonner)

    / Create a map for your startup community!
    / https://github.com/abenzer/represent-map
    %title represent.la - map of the Los Angeles startup community
    %meta{:content => "width=device-width, initial-scale=1.0, user-scalable=no", :name => "viewport"}
      %meta{:charset => "UTF-8"}
        %link{:href => "http://fonts.googleapis.com/css?family=Open+Sans+Condensed:700|Open+Sans:400,700", :rel => "stylesheet", :type => "text/css"}
          -#%link{:href => "./bootstrap/css/bootstrap.css", :rel => "stylesheet", :type => "text/css"}/
          -#%link{:href => "./bootstrap/css/bootstrap-responsive.css", :rel => "stylesheet", :type => "text/css"}/
          -#%link{:href => "map.css?nocache=289671982568", :rel => "stylesheet", :type => "text/css"}/
          -#%link{:href => "mobile.css", :media => "only screen and (max-device-width: 480px)", :rel => "stylesheet", :type => "text/css"}/
          -#%script{:charset => "utf-8", :src => "./scripts/jquery-1.7.1.js", :type => "text/javascript"}
          -#%script{:charset => "utf-8", :src => "./bootstrap/js/bootstrap.js", :type => "text/javascript"}
          -#%script{:charset => "utf-8", :src => "./bootstrap/js/bootstrap-typeahead.js", :type => "text/javascript"}
          %script{:src => "https://maps.googleapis.com/maps/api/js?sensor=false", :type => "text/javascript"}
          -#%script{:src => "./scripts/label.js", :type => "text/javascript"}
          :javascript
            var map;
            var infowindow = null;
            var gmarkers = [];
            var markerTitles =[];
            var highestZIndex = 0;  
            var agent = "default";
            var zoomControl = true;


            // detect browser agent
            $(document).ready(function(){
              if(navigator.userAgent.toLowerCase().indexOf("iphone") > -1 || navigator.userAgent.toLowerCase().indexOf("ipod") > -1) {
                agent = "iphone";
                zoomControl = false;
              }
              if(navigator.userAgent.toLowerCase().indexOf("ipad") > -1) {
                agent = "ipad";
                zoomControl = false;
              }
            }); 
            

            // resize marker list onload/resize
            $(document).ready(function(){
              newHeight = $('html').height() - $('#menu > .wrapper').height();
              $('#list').css('height', newHeight + "px"); 
            });
            $(window).resize(function() {
              resizeList();
            });
            
            // resize marker list to fit window
            function resizeList() {
              newHeight = $('html').height() - $('#menu > .wrapper').height();
              $('#list').css('height', newHeight + "px"); 
            }


            // initialize map
            function initialize() {
              // set map styles
              var mapStyles = [
               {
                  featureType: "road",
                  elementType: "geometry",
                  stylers: [
                    { hue: "#8800ff" },
                    { lightness: 100 }
                  ]
                },{
                  featureType: "road",
                  stylers: [
                    { visibility: "on" },
                    { hue: "#91ff00" },
                    { saturation: -62 },
                    { gamma: 1.98 },
                    { lightness: 45 }
                  ]
                },{
                  featureType: "water",
                  stylers: [
                    { hue: "#005eff" },
                    { gamma: 0.72 },
                    { lightness: 42 }
                  ]
                },{
                  featureType: "transit.line",
                  stylers: [
                    { visibility: "off" }
                  ]
                },{
                  featureType: "administrative.locality",
                  stylers: [
                    { visibility: "on" }
                  ]
                },{
                  featureType: "administrative.neighborhood",
                  elementType: "geometry",
                  stylers: [
                    { visibility: "simplified" }
                  ]
                },{
                  featureType: "landscape",
                  stylers: [
                    { visibility: "on" },
                    { gamma: 0.41 },
                    { lightness: 46 }
                  ]
                },{
                  featureType: "administrative.neighborhood",
                  elementType: "labels.text",
                  stylers: [
                    { visibility: "on" },
                    { saturation: 33 },
                    { lightness: 20 }
                  ]
                }
              ];

              // set map options
              var myOptions = {
                zoom: 12,
                //minZoom: 10,
                center: new google.maps.LatLng(14.606661,121.081652),
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                panControl: false,
                streetViewControl: false,
                mapTypeControl: false,
                zoomControl: zoomControl,
                styles: mapStyles,
                zoomControlOptions: {
                  style: google.maps.ZoomControlStyle.SMALL,
                  position: google.maps.ControlPosition.TOP_LEFT
                }
              };
              map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);
              zoomLevel = map.getZoom();

              // prepare infowindow
              infowindow = new google.maps.InfoWindow({
                content: "holding..."
              });

              // only show marker labels if zoomed in
              google.maps.event.addListener(map, 'zoom_changed', function() {
                zoomLevel = map.getZoom();
                if(zoomLevel <= 15) {
                  $(".marker_label").css("display", "none");
                } else {
                  $(".marker_label").css("display", "inline");
                }
              });

              // markers array: name, type (icon), lat, long, description, uri, address
              markers = new Array();
              

              // add markers
              jQuery.each(markers, function(i, val) {
                infowindow = new google.maps.InfoWindow({
                  content: ""
                });

                // offset latlong ever so slightly to prevent marker overlap
                rand_x = Math.random();
                rand_y = Math.random();
                val[2] = parseFloat(val[2]) + parseFloat(parseFloat(rand_x) / 6000);
                val[3] = parseFloat(val[3]) + parseFloat(parseFloat(rand_y) / 6000);

                // show smaller marker icons on mobile
                if(agent == "iphone") {
                  var iconSize = new google.maps.Size(16,19);
                } else {
                  iconSize = null;
                }

                // build this marker
                var markerImage = new google.maps.MarkerImage("./images/icons/"+val[1]+".png", null, null, null, iconSize);
                var marker = new google.maps.Marker({
                  position: new google.maps.LatLng(val[2],val[3]),
                  map: map,
                  title: '',
                  clickable: true,
                  infoWindowHtml: '',
                  zIndex: 10 + i,
                  icon: markerImage
                });
                marker.type = val[1];
                gmarkers.push(marker);

                // add marker hover events (if not viewing on mobile)
                if(agent == "default") {
                  google.maps.event.addListener(marker, "mouseover", function() {
                    this.old_ZIndex = this.getZIndex(); 
                    this.setZIndex(9999); 
                    $("#marker"+i).css("display", "inline");
                    $("#marker"+i).css("z-index", "99999");
                  });
                  google.maps.event.addListener(marker, "mouseout", function() { 
                    if (this.old_ZIndex && zoomLevel <= 15) {
                      this.setZIndex(this.old_ZIndex); 
                      $("#marker"+i).css("display", "none");
                    }
                  }); 
                }

                // format marker URI for display and linking
                var markerURI = val[5];
                if(markerURI.substr(0,7) != "http://") {
                  markerURI = "http://" + markerURI; 
                }
                var markerURI_short = markerURI.replace("http://", "");
                var markerURI_short = markerURI_short.replace("www.", "");

                // add marker click effects (open infowindow)
                google.maps.event.addListener(marker, 'click', function () {
                  infowindow.setContent(
                    ""+val[0]+""
                    + ""+markerURI_short+""
                    + ""+val[4]+""
                    + ""+val[6]+""
                  );
                  infowindow.open(map, this);
                });

                // add marker label
                var latLng = new google.maps.LatLng(val[2], val[3]);
                var label = new Label({
                  map: map,
                  id: i
                });
                label.bindTo('position', marker);
                label.set("text", val[0]);
                label.bindTo('visible', marker);
                label.bindTo('clickable', marker);
                label.bindTo('zIndex', marker);
              });


              // zoom to marker if selected in search typeahead list
              //$('#search').typeahead({
              //  source: markerTitles, 
              //  onselect: function(obj) {
              //    marker_id = jQuery.inArray(obj, markerTitles);
              //    if(marker_id) {
              //      map.panTo(gmarkers[marker_id].getPosition());
              //      map.setZoom(15);
              //      google.maps.event.trigger(gmarkers[marker_id], 'click');
              //    }
              //    $("#search").val("");
              //  }
              //});
            } 


            // zoom to specific marker
            function goToMarker(marker_id) {
              if(marker_id) {
                map.panTo(gmarkers[marker_id].getPosition());
                map.setZoom(15);
                google.maps.event.trigger(gmarkers[marker_id], 'click');
              }
            }

            // toggle (hide/show) markers of a given type (on the map)
            function toggle(type) {
              if($('#filter_'+type).is('.inactive')) {
                show(type); 
              } else {
                hide(type); 
              }
            }

            // hide all markers of a given type
            function hide(type) {
              for (var i=0; i<gmarkers.length; i++) {
                if (gmarkers[i].type == type) {
                  gmarkers[i].setVisible(false);
                }
              }
              $("#filter_"+type).addClass("inactive");
            }

            // show all markers of a given type
            function show(type) {
              for (var i=0; i<gmarkers.length; i++) {
                if (gmarkers[i].type == type) {
                  gmarkers[i].setVisible(true);
                }
              }
              $("#filter_"+type).removeClass("inactive");
            }
            
            // toggle (hide/show) marker list of a given type
            function toggleList(type) {
              $("#list .list-"+type).toggle();
            }


            // hover on list item
            function markerListMouseOver(marker_id) {
              $("#marker"+marker_id).css("display", "inline");
            }
            function markerListMouseOut(marker_id) {
              $("#marker"+marker_id).css("display", "none");
            }

            google.maps.event.addDomListener(window, 'load', initialize);
              //<? echo $head_html; ?>
  %body
    / facebook like button code
    #fb-root
    :javascript
      (function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=421651897866629";
            fjs.parentNode.insertBefore(js, fjs);
          }(document, 'script', 'facebook-jssdk'));    // google map
    #map_canvas
    / main menu bar
